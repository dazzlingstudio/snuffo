@model Uvendia.Domain.Mvc.ViewModels.SearchProductModel
@{

}
@Html.ValidationSummary(false, "", new { @class = "text-danger" })
@using (Html.BeginForm("Index", "Search", FormMethod.Post, htmlAttributes: new { id = "frmSearch", @class = "form-group" }))
{
    @Html.HiddenFor(model => model.TreeSelectedNodePath)
    @Html.HiddenFor(m => m.Title)
    <div>
        <div class="row">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label smaller-fontsize" })
            @Html.TextBoxFor(model => model.ProductId, "{0}", new { @class = "form-control input-lg", type = "number", @maxlength = "15" })
        </div>

        <div class="row">
            @Html.LabelFor(model => model.ProductSku, htmlAttributes: new { @class = "control-label smaller-fontsize" })
            @Html.EditorFor(model => model.ProductSku, new { htmlAttributes = new { @class = "form-control input-sm required" } })
        </div>

        <div class="row">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label smaller-fontsize" })
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control input-sm required" } })
        </div>

        <div class="row">
            @Html.LabelFor(model => model.Keyword, htmlAttributes: new { @class = "control-label smaller-fontsize" })
            @Html.EditorFor(model => model.Keyword, new { htmlAttributes = new { @class = "form-control input-sm required" } })
        </div>
        <div class="form-group">
            <div class="btn-toolbar">
                <button type="submit" id="btnSearch" class="btn btn-success pull-left action-link">
                    Search <i class="glyphicon glyphicon-search"></i>
                </button>                
            </div>
        </div>
        @Html.HiddenFor(m => m.AddOrderDetail)
        <div id="containter-results"></div>

    </div>
}

@if (Model.AddOrderDetail)
{
    <div class="break"></div>
    <div class="form-group">
        <div class="btn-toolbar">
            <button type="submit" class="btn btn-default pull-left save-and-close-search action-link">
                Save &amp; Close <i class="glyphicon glyphicon-floppy-saved"></i>
            </button>
            <button type="submit" class="btn btn-default pull-left closemodal action-link">
                Cancel <i class="glyphicon glyphicon-floppy-remove"></i>
            </button>
        </div>
    </div>
}

@section scripts {
    <script>
        UmbClientMgr.mainTree().syncTree($('#TreeSelectedNodePath').val(), false);

        $(function () {

            $("#btnSearch").click(function (e) {
                e.preventDefault();
                var form = $('#frmSearch');

                $.ajax({
                    url : '/Umbraco/Backoffice/Uvendia/Search',
                    data: form.serialize(),
                    type: 'POST',
                    success: function(data){                        
                        $("#containter-results").html(data);
                        Uvendia.closeLoadingSpinner();
                    }
                });
            });

            // collapse parent product
            $('div.uvendia-body').on('click', 'table.products tr.clickable', function () {

                var targetRowClass = $(this).data('target');
                var targetRow = $(this).parent().find(targetRowClass);

                targetRow.toggle('slow');

                var i = $(this).find('i.collapsable-product');                
                var id = i.data('id');
                i.attr('data-subrows-loaded', true);
                var tableBody = i.closest('table.products').find('tbody');
                var subrow = tableBody.find('#subrow' + id);

                if (subrow.length) {

                    var enableselect = i.data('enableselect');
                    $.ajax({
                        type: "GET",
                        url: '/Umbraco/Backoffice/Uvendia/Product/LoadVariants/' + id + '?enableselect=' + enableselect,
                        cache: false,
                        dataType: 'html',
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                        },
                        success: function (data, textStatus, XMLHttpRequest) {
                            
                            tableBody.find('#subrow' + id).after($(data));

                            // remove subrow
                            subrow.remove();
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            
                        }
                    });
                }
                if (i.hasClass('glyphicon-plus'))
                    i.toggleClass('glyphicon-plus glyphicon-minus');
                else {
                    i.toggleClass('glyphicon-minus glyphicon-plus');
                }
            });
        });
    </script>
}
