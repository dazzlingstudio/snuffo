@inherits Umbraco.Web.Mvc.UmbracoViewPage<ProductPageModel>
@{
    Layout = "masterShopTop.cshtml";
    float averageRating = Model.Product.CalculateAverageRating();
}


<div class="row">
    <!-- Poduct Gallery-->
    <div class="col-md-6">
        <div class="product-gallery">
            @if (Model.Product.HasDiscount())
            {
                <span class="product-badge text-danger">@(Math.Round(Model.Product.DiscountPercentage.Value))% Off</span>
            }
            <div class="product-carousel owl-carousel gallery-wrapper">
                @for (int i = 0; i < Model.Images.Count(); i++)
                {
                    var src = @CloudinaryService.GetCloudinaryUrl(Model.Images.ElementAt(i), 1000, 667, CropType.Pad);
                    <div class="gallery-item" data-hash="image@(i)">
                        <a href="@src" data-size="1000x667">
                            <img src="@src" alt="@Model.Product.DisplayName()">
                        </a>
                    </div>
                }
            </div>
            <ul class="product-thumbnails">
                @for (int i = 0; i < Model.Images.Count(); i++)
                {
                    <li @(i == 0 ? "class=active" : "")><a href="#image@(i)"><img src="@CloudinaryService.GetCloudinaryUrl(Model.Images.ElementAt(i), 95, 65, CropType.Fit)" alt="@Model.Product.DisplayName()"></a></li>
                }
            </ul>
        </div>
    </div>
    <!-- Product Info-->
    <div class="col-md-6">
        <div class="padding-top-2x mt-2 hidden-md-up"></div>
        <div class="rating-stars">
            @for (int i = 0; i < averageRating; i++)
            {
                <i class="icon-star filled"></i>
            }

        </div><span class="text-muted align-middle">&nbsp;&nbsp;@Math.Round(averageRating, 1) | @(Model.Product.Reviews.Count) customer reviews</span>
        <h2 class="padding-top-1x text-normal">@Model.Product.DisplayName()</h2>
        <div id="container-price" class="h2 d-block">
            @{Html.RenderPartial("~/views/partials/Product/_ProductDetailPrice.cshtml", Model.SelectedVariant); }
        </div>
        @Html.Raw(Model.Product.GetShortDescription()) 
        <div class="row margin-top-1x">
            @if (Model.Sizes != null)
            {
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="size">Size</label>
                        @Html.HiddenFor(m => m.Product.Id, new { id = "hdnProductId" })
                        @Html.DropDownListFor(model => model.SelectedSize, Model.Sizes, new { id = "ddlSize", @class = "form-control" })
                    </div>
                </div>
            }
            <div class="col-sm-3">
                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <select class="form-control" id="quantity">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="pt-1 mb-2"><span class="text-medium">SKU:</span> #@Model.Product.Sku</div>
        <div class="padding-bottom-1x mb-2">
            <span class="text-medium">Categories:</span>
            @for (int i = 0; i < Model.Product.Categories.Count; i++)
            {
                string name = $"{Model.Product.Categories[i].DisplayName()}{(i < (Model.Product.Categories.Count - 1) ? "," : "")}";
                <a class="navi-link" href="/@CurrentUser.LanguageCode/shop/?c=@(Model.Product.Categories[i].Id)">@name</a>
            }

        </div>
        <hr class="mb-3">
        <div class="d-flex flex-wrap justify-content-between">
            <div class="entry-share mt-2 mb-2">
                <span class="text-muted">Share:</span>
                <div class="share-links"><a class="social-button shape-circle sb-facebook" href="#" data-toggle="tooltip" data-placement="top" title="Facebook"><i class="socicon-facebook"></i></a><a class="social-button shape-circle sb-twitter" href="#" data-toggle="tooltip" data-placement="top" title="Twitter"><i class="socicon-twitter"></i></a><a class="social-button shape-circle sb-instagram" href="#" data-toggle="tooltip" data-placement="top" title="Instagram"><i class="socicon-instagram"></i></a><a class="social-button shape-circle sb-google-plus" href="#" data-toggle="tooltip" data-placement="top" title="Google +"><i class="socicon-googleplus"></i></a></div>
            </div>
            <div class="sp-buttons mt-2 mb-2">
                <button class="btn btn-outline-secondary btn-sm btn-wishlist" data-toggle="tooltip" title="Whishlist"><i class="icon-heart"></i></button>
                <button data-product-id="@Model.Product.Id" data-thumb="@Model.Product["Image 1"]" class="btn btn-primary btnAddToCart"><i class="icon-bag"></i> Add to Cart</button>
            </div>
        </div>
    </div>
</div>
<!-- Product Tabs-->
<div class="row padding-top-3x mb-3 col-12">
    <div class="col-lg-10 offset-lg-1">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a class="nav-link active" href="#description" data-toggle="tab" role="tab">Description</a></li>
            <li class="nav-item"><a class="nav-link" href="#reviews" data-toggle="tab" role="tab">Reviews (@(Model.Product.Reviews.Count))</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane fade show active" id="description" role="tabpanel">
                
                @Html.Raw(Model.Product.GetLongDescription())
                <br />
                <br />
                <div class="row">
                    @if (!Model.Sizes.IsNullOrEmpty())
                    {

                        <div class="col-sm-6">
                            <dl>
                                <dt>Available Sizes:</dt>
                                <dd>@(string.Join(", ", Model.Sizes.Select(x => x.Text).ToArray()))</dd>
                            </dl>
                        </div>

                    }
                </div>
            </div>
            <div class="tab-pane fade" id="reviews" role="tabpanel">
                @foreach (var review in Model.Product.Reviews)
                {
                    <!-- Review-->
                    <div class="comment">
                        <div class="comment-author-ava icon-head"></div>
                        <div class="comment-body">
                            <div class="comment-header d-flex flex-wrap justify-content-between">
                                <h4 class="comment-title">@review.Subject</h4>
                                <div class="mb-2">
                                    <div class="rating-stars">
                                        @for (int i = 0; i < review.Stars; i++)
                                        {
                                            <i class="icon-star filled"></i>
                                        }
                                    </div>
                                </div>
                            </div>
                            <p class="comment-text">
                                @review.Comment
                            </p>
                            <div class="comment-footer">
                                <span class="comment-meta">
                                    @review.Name
                                </span>
                            </div>
                        </div>
                    </div>
                }
                
                @{Html.RenderPartial("~/views/partials/Product/_ProductReviewForm.cshtml", new ProductReviewModel(Model.Content) { ProductId = Model.Product.Id }); }
            </div>
        </div>
    </div>
</div>

@{Html.RenderPartial("~/views/partials/Product/_RelatedProducts.cshtml", Model.InterestingProducts); }


@section footer {
    <!-- Photoswipe container-->
    <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="pswp__bg"></div>
        <div class="pswp__scroll-wrap">
            <div class="pswp__container">
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
                <div class="pswp__item"></div>
            </div>
            <div class="pswp__ui pswp__ui--hidden">
                <div class="pswp__top-bar">
                    <div class="pswp__counter"></div>
                    <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                    <button class="pswp__button pswp__button--share" title="Share"></button>
                    <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                    <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                    <div class="pswp__preloader">
                        <div class="pswp__preloader__icn">
                            <div class="pswp__preloader__cut">
                                <div class="pswp__preloader__donut"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                    <div class="pswp__share-tooltip"></div>
                </div>
                <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
                <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
                <div class="pswp__caption">
                    <div class="pswp__caption__center"></div>
                </div>
            </div>
        </div>
    </div>
}

